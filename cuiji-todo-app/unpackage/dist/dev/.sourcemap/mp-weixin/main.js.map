{"version":3,"file":"main.js","sources":["components/custom-tabbar/custom-tabbar.vue","App.vue","main.js"],"sourcesContent":["<template>\n  <view class=\"custom-tabbar\">\n    <!-- 背景遮罩层，用于点击空白区域关闭某些弹窗 -->\n    <view\n      class=\"tabbar-backdrop\"\n      v-if=\"showBackdrop\"\n      @click=\"handleBackdropClick\"\n    ></view>\n\n    <!-- 主 tabBar 容器 -->\n    <view class=\"tabbar-container\" :class=\"{ 'tabbar-hidden': isHidden }\">\n      <!-- 顶部边框线 -->\n      <view class=\"tabbar-border\"></view>\n\n      <!-- tabBar 内容区域 -->\n      <view class=\"tabbar-content\">\n        <!-- 遍历配置的 tab 项 -->\n        <view\n          v-for=\"(item, index) in tabList\"\n          :key=\"index\"\n          class=\"tab-item\"\n          :class=\"{\n            'tab-item-active': currentIndex === index,\n            'tab-item-disabled': item.disabled,\n          }\"\n          @click=\"handleTabClick(item, index)\"\n        >\n          <!-- 图标容器 -->\n          <view class=\"tab-icon-container\">\n            <!-- 使用 iconfont 图标 -->\n            <text\n              class=\"tab-icon iconfont\"\n              :class=\"currentIndex === index ? item.selectedIcon : item.icon\"\n            ></text>\n\n            <!-- 徽章提示（可选） -->\n            <view\n              v-if=\"item.badge && item.badge > 0\"\n              class=\"tab-badge\"\n              :class=\"{ 'tab-badge-dot': item.badge === 'dot' }\"\n            >\n              <text v-if=\"item.badge !== 'dot'\" class=\"badge-text\">{{\n                item.badge\n              }}</text>\n            </view>\n          </view>\n\n          <!-- 文字标签 -->\n          <text\n            class=\"tab-text\"\n            :class=\"{ 'tab-text-active': currentIndex === index }\"\n          >\n            {{ item.text }}\n          </text>\n\n          <!-- 选中状态指示器 -->\n          <view v-if=\"currentIndex === index\" class=\"tab-indicator\"></view>\n        </view>\n      </view>\n\n      <!-- 安全区域适配（iPhone X 等设备） -->\n      <view class=\"tabbar-safe-area\"></view>\n    </view>\n  </view>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, reactive, computed, onMounted, watch } from \"vue\";\n\n// 定义 tab 项接口\ninterface TabItem {\n  pagePath: string; // 页面路径\n  text: string; // 显示文字\n  icon: string; // 普通状态图标类名\n  selectedIcon: string; // 选中状态图标类名\n  disabled?: boolean; // 是否禁用\n  badge?: number | string; // 徽章数量或 'dot' 表示红点\n}\n\n// 定义组件 props\ninterface Props {\n  // 当前选中的 tab 索引\n  current?: number;\n  // 是否显示背景遮罩\n  showBackdrop?: boolean;\n  // 是否隐藏 tabBar\n  hidden?: boolean;\n  // 自定义 tab 列表（可选，不传则使用默认配置）\n  customTabs?: TabItem[];\n}\n\n// 定义组件 emits\ninterface Emits {\n  (e: \"change\", index: number, item: TabItem): void;\n  (e: \"click\", index: number, item: TabItem): void;\n}\n\n// 接收 props\nconst props = withDefaults(defineProps<Props>(), {\n  current: 0,\n  showBackdrop: false,\n  hidden: false,\n  customTabs: () => [],\n});\n\n// 定义 emits\nconst emit = defineEmits<Emits>();\n\n// 响应式数据\nconst currentIndex = ref(props.current);\nconst isHidden = ref(props.hidden);\n\n// 默认 tab 配置\nconst defaultTabList: TabItem[] = [\n  {\n    pagePath: \"pages/index/index\",\n    text: \"首页\",\n    icon: \"icon-home\", // 普通状态图标\n    selectedIcon: \"icon-home-fill\", // 选中状态图标\n    badge: 0,\n  },\n  {\n    pagePath: \"pages/tasks/tasks\",\n    text: \"任务\",\n    icon: \"icon-task\",\n    selectedIcon: \"icon-task-fill\",\n    badge: 3,\n  },\n  {\n    pagePath: \"pages/add/add\",\n    text: \"添加\",\n    icon: \"icon-add\",\n    selectedIcon: \"icon-add-fill\",\n    badge: 0,\n  },\n  {\n    pagePath: \"pages/statistics/statistics\",\n    text: \"统计\",\n    icon: \"icon-chart\",\n    selectedIcon: \"icon-chart-fill\",\n    badge: 0,\n  },\n  {\n    pagePath: \"pages/profile/profile\",\n    text: \"我的\",\n    icon: \"icon-user\",\n    selectedIcon: \"icon-user-fill\",\n    badge: \"dot\", // 红点提示\n  },\n];\n\n// 计算属性：使用自定义配置或默认配置\nconst tabList = computed(() => {\n  return props.customTabs.length > 0 ? props.customTabs : defaultTabList;\n});\n\n// 监听 props 变化\nwatch(\n  () => props.current,\n  (newVal) => {\n    currentIndex.value = newVal;\n  }\n);\n\nwatch(\n  () => props.hidden,\n  (newVal) => {\n    isHidden.value = newVal;\n  }\n);\n\n// 处理 tab 点击事件\nconst handleTabClick = (item: TabItem, index: number) => {\n  // 如果当前 tab 被禁用，不执行任何操作\n  if (item.disabled) {\n    return;\n  }\n\n  // 如果点击的是当前已选中的 tab，不执行跳转\n  if (currentIndex.value === index) {\n    return;\n  }\n\n  // 更新当前选中索引\n  currentIndex.value = index;\n\n  // 触发点击事件\n  emit(\"click\", index, item);\n\n  // 跳转到对应页面\n  uni.switchTab({\n    url: `/${item.pagePath}`,\n    success: () => {\n      // 跳转成功后触发 change 事件\n      emit(\"change\", index, item);\n    },\n    fail: (err) => {\n      uni.__f__('error','at components/custom-tabbar/custom-tabbar.vue:198',\"页面跳转失败:\", err);\n      // 跳转失败时恢复之前的选中状态\n      currentIndex.value = props.current;\n    },\n  });\n};\n\n// 处理背景遮罩点击\nconst handleBackdropClick = () => {\n  // 可以在这里处理关闭弹窗等逻辑\n  uni.__f__('log','at components/custom-tabbar/custom-tabbar.vue:208',\"背景遮罩被点击\");\n};\n\n// 更新徽章数量\nconst updateBadge = (index: number, badge: number | string) => {\n  if (tabList.value[index]) {\n    tabList.value[index].badge = badge;\n  }\n};\n\n// 清除徽章\nconst clearBadge = (index: number) => {\n  if (tabList.value[index]) {\n    tabList.value[index].badge = 0;\n  }\n};\n\n// 设置 tab 禁用状态\nconst setTabDisabled = (index: number, disabled: boolean) => {\n  if (tabList.value[index]) {\n    tabList.value[index].disabled = disabled;\n  }\n};\n\n// 显示/隐藏 tabBar\nconst toggleTabBar = (hidden: boolean) => {\n  isHidden.value = hidden;\n};\n\n// 暴露方法给父组件使用\ndefineExpose({\n  updateBadge,\n  clearBadge,\n  setTabDisabled,\n  toggleTabBar,\n});\n\n// 组件挂载时的初始化\nonMounted(() => {\n  uni.__f__('log','at components/custom-tabbar/custom-tabbar.vue:247',\"自定义 TabBar 组件已挂载\");\n  uni.__f__('log','at components/custom-tabbar/custom-tabbar.vue:248',\"当前 tab 列表:\", tabList.value);\n  uni.__f__('log','at components/custom-tabbar/custom-tabbar.vue:249',\"tabList 长度:\", tabList.value.length);\n  uni.__f__('log','at components/custom-tabbar/custom-tabbar.vue:250',\"当前选中索引:\", currentIndex.value);\n  uni.__f__('log','at components/custom-tabbar/custom-tabbar.vue:251',\"是否隐藏:\", isHidden.value);\n});\n</script>\n\n<style lang=\"scss\" scoped>\n.custom-tabbar {\n  position: relative;\n  width: 100%;\n  z-index: 999;\n  /* 调试样式 - 临时添加边框来检查组件是否渲染 */\n  border: 2rpx solid red;\n}\n\n.tabbar-backdrop {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(0, 0, 0, 0.3);\n  z-index: 998;\n}\n\n.tabbar-container {\n  position: fixed;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  background: #ffffff;\n  box-shadow: 0 -2rpx 20rpx rgba(0, 0, 0, 0.1);\n  transition: transform 0.3s ease-in-out;\n  z-index: 999;\n  min-height: 140rpx;\n  /* 调试样式 - 临时添加背景色来检查容器是否可见 */\n  border: 2rpx solid blue;\n\n  &.tabbar-hidden {\n    transform: translateY(100%);\n  }\n}\n\n.tabbar-border {\n  height: 1rpx;\n  background: #e5e5e5;\n}\n\n.tabbar-content {\n  display: flex;\n  align-items: center;\n  justify-content: space-around;\n  padding: 20rpx 0;\n  min-height: 120rpx;\n}\n\n.tab-item {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  flex: 1;\n  padding: 10rpx 0;\n  position: relative;\n  transition: all 0.3s ease;\n\n  &.tab-item-active {\n    .tab-icon {\n      color: #667eea;\n      transform: scale(1.1);\n    }\n\n    .tab-text {\n      color: #667eea;\n      font-weight: bold;\n    }\n  }\n\n  &.tab-item-disabled {\n    opacity: 0.5;\n    pointer-events: none;\n  }\n}\n\n.tab-icon-container {\n  position: relative;\n  margin-bottom: 8rpx;\n}\n\n.tab-icon {\n  font-size: 44rpx;\n  color: #8a8a8a;\n  transition: all 0.3s ease;\n  display: block;\n}\n\n.tab-badge {\n  position: absolute;\n  top: -8rpx;\n  right: -8rpx;\n  min-width: 32rpx;\n  height: 32rpx;\n  background: #ff4757;\n  border-radius: 16rpx;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 0 8rpx;\n\n  &.tab-badge-dot {\n    width: 16rpx;\n    height: 16rpx;\n    min-width: 16rpx;\n    border-radius: 50%;\n    padding: 0;\n  }\n}\n\n.badge-text {\n  color: #ffffff;\n  font-size: 20rpx;\n  font-weight: bold;\n  line-height: 1;\n}\n\n.tab-text {\n  font-size: 20rpx;\n  color: #8a8a8a;\n  transition: all 0.3s ease;\n  line-height: 1;\n}\n\n.tab-text-active {\n  color: #667eea;\n  font-weight: bold;\n}\n\n.tab-indicator {\n  position: absolute;\n  bottom: 0;\n  left: 50%;\n  transform: translateX(-50%);\n  width: 40rpx;\n  height: 4rpx;\n  background: #667eea;\n  border-radius: 2rpx;\n}\n\n.tabbar-safe-area {\n  height: env(safe-area-inset-bottom, 0px);\n  min-height: 20rpx;\n  background: #ffffff;\n}\n\n/* 响应式设计 */\n@media screen and (max-width: 750rpx) {\n  .tab-icon {\n    font-size: 40rpx;\n  }\n\n  .tab-text {\n    font-size: 18rpx;\n  }\n}\n\n/* 深色模式支持 */\n@media (prefers-color-scheme: dark) {\n  .tabbar-container {\n    background: #1a1a1a;\n    box-shadow: 0 -2rpx 20rpx rgba(0, 0, 0, 0.3);\n  }\n\n  .tabbar-border {\n    background: #333333;\n  }\n\n  .tab-icon {\n    color: #cccccc;\n  }\n\n  .tab-text {\n    color: #cccccc;\n  }\n\n  .tabbar-safe-area {\n    background: #1a1a1a;\n  }\n}\n</style>\n","<template>\n  <view id=\"app\">\n    <!-- 应用内容 -->\n  </view>\n  <!-- 自定义底部导航栏 -->\n  <CustomTabBar />\n</template>\n\n<script>\nimport { version } from \"./package.json\";\nimport CustomTabBar from \"@/components/custom-tabbar/custom-tabbar.vue\";\n\nexport default {\n  components: {\n    CustomTabBar,\n  },\n  onLaunch: function () {\n    console.log(\"待办事项管理应用启动\", `v${version}`);\n  },\n  onShow: function () {\n    console.log(\"应用显示\");\n  },\n  onHide: function () {\n    console.log(\"应用隐藏\");\n  },\n  globalData: {\n    // 全局数据\n  },\n};\n</script>\n\n<style lang=\"scss\">\n@import \"@/uni_modules/uni-scss/index.scss\";\n\n/* 全局样式 */\npage {\n  background-color: #f5f5f5;\n  height: 100%;\n  font-size: 28rpx;\n}\n\n/* H5 兼容 PC */\n/* #ifdef H5 */\n@media screen and (min-width: 768px) {\n  body {\n    overflow-y: scroll;\n  }\n}\n/* #endif */\n</style>\n","import App from './App'\r\nimport store from './store'\r\n\r\n// #ifndef VUE3\r\nimport Vue from 'vue'\r\nVue.config.productionTip = false\r\nVue.prototype.$store = store\r\nVue.prototype.$adpid = \"1111111111\"\r\nVue.prototype.$backgroundAudioData = {\r\n\tplaying: false,\r\n\tplayTime: 0,\r\n\tformatedPlayTime: '00:00:00'\r\n}\r\nApp.mpType = 'app'\r\nconst app = new Vue({\r\n\tstore,\r\n\t...App\r\n})\r\napp.$mount()\r\n// #endif\r\n\r\n// #ifdef VUE3\r\nimport {\r\n\tcreateSSRApp\r\n} from 'vue'\nimport * as Pinia from 'pinia';\nimport Vuex from \"vuex\";\r\nexport function createApp() {\r\n\tconst app = createSSRApp(App)\r\n\tapp.use(store)\n\tapp.use(Pinia.createPinia());\r\n\tapp.config.globalProperties.$adpid = \"1111111111\"\r\n\tapp.config.globalProperties.$backgroundAudioData = {\r\n\t\tplaying: false,\r\n\t\tplayTime: 0,\r\n\t\tformatedPlayTime: '00:00:00'\r\n\t}\r\n\treturn {\r\n\t\tapp,\n\t\tVuex, // 如果 nvue 使用 vuex 的各种map工具方法时，必须 return Vuex\n\t\tPinia // 此处必须将 Pinia 返回\r\n\t}\r\n}\r\n// #endif\n"],"names":["ref","computed","watch","uni","onMounted","CustomTabBar","createSSRApp","store","Pinia.createPinia","Vuex","Pinia"],"mappings":"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"}